package leetcode;

import java.util.Arrays;

public class _924_MalwareSpread {
    public static int[] dsu;
    public static int[] size;

    public static int find(int x) {
        return dsu[x] == x ? x : (dsu[x] = find(dsu[x]));
    }

    public static void merge(int x, int y) {
        int fx = find(x);
        int fy = find(y);
        size[fy] += size[fx];
        dsu[fx] = fy;
    }

    public static int minMalwareSpread(int[][] graph, int[] initial) {
        int n = graph.length;
        dsu = new int[n]; size = new int[n];

        Arrays.fill(size, 1);

        for(int r = 0; r <n; r++){
            for(int c = 0; c <n; c++){
                if(graph[r][c] == 1) merge(r,c);
            }
        }

        Arrays.sort(initial);

        int max = Integer.MAX_VALUE, node = -1;

        return -1;
    }
}
